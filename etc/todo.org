* DONE open mpi
** DONE research non-blocking receive & refactor 'Messenger::receiveWithTag'
** DONE research thread safety of all used MPI commands
** DONE research whether Open MPI truly supports overwritting published names
* DONE code design
** DONE rename every 'command' variable to 'data'
* DONE leader election
** DONE comment the bully algorithm
** DONE refactor for multithreading
* DONE paxos
** DONE set the message unique id in the messenger class
** DONE refactor for multithreading
** DONE cleanup code 
** DONE document
* DONE server
** DONE implement leader port publishing 
** DONE implement accept thread
** DONE implement election thread
** DONE implement consensus thread
** DONE implement REPL thread
** DONE implement derived MessageHandler classes for each thread/tag
** DONE implement the MessageHandler class
** DONE move accept thread spawning in main to Node::create
** DONE implement probing blocking call in messenger
** DONE make a thread safe function for adding communicator to clientReceivers
** DONE in leader election add call to enableClientCommunication
** DONE start a leader election instead of setting the leader upon startup
** DONE make a virtual 'init' command called before main loop in MessageReceiver
** DONE [#B] shutdown the 'ping' and 'recovery' threads
** DONE [#A] implement failure detection heartbeat thread
** DONE [#C] cleanup the failure detector, index to id & id to index
* DONE messenger
** DONE change the 'cluster size' and rank getter to return the values
** DONE [#A] change blocking Send to non-blocking Isend
** DONE [#A] implement message dropping from dead nodes except with failcode
** DONE [#B] handle parse errors
* DONE client
** DONE implement server communication
** DONE [#B] implement the random command generation script
** DONE [#B] implement reading and sending the commands in the command file
** DONE [#B] create a client-repl directory for the client's repl files
** DONE create a client-command directory for the client's random command files
** DONE handle repl shutdown in the client
** DONE set client speed sleep
** DONE set client to refresh the looked up port when replication times out
* DONE demo
** DONE normal consensus
** DONE consensus with acceptor crash
** DONE consensus with acceptor crash recovery
** DONE consensus with leader crash
** DONE consensus with leader crash recovery
* TODO cleanup
** DONE implement a broacast member function
** TODO remove allocating logic in the LogFileManager contructor
** TODO merge setMessage and send
** TODO encapsulate json logic
** TODO improve visibility of the rank and cluster size
** TODO fix message unique id generation
* TODO misc
** TODO remove jq dependency
** TODO make some performance measures
* TODO doc
** DONE [#C] document header functions
** DONE [#C] why repl messaging is done through a file
** TODO performance measures
** TODO abstract

